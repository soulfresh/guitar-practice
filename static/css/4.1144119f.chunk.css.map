{"version":3,"sources":["Home.scss","../../_fonts.scss","../../_sizing.scss","NotFound.scss","Main.scss"],"names":[],"mappings":"AAEA,gBAEI,gHCDqD,CDErD,eAAgB,CAChB,cAAe,CAJnB,gBAQI,YCgDmB,CDxDvB,sBAYI,YAAa,CACb,qBAAsB,CACtB,YC0CmB,CCyBnB,yBFjFJ,sBAiBM,kBAAmB,CAjBzB,qCAoBQ,6BAA8B,CAC/B,CArBP,mCAyBM,QAAO,CGxBb,uBAEI,cAAe,CCFnB,MACE,YAAa,CACb,qBAAsB,CACtB,QAAO","file":"4.1144119f.chunk.css","sourcesContent":["@import 'theme';\n\n.home {\n  .big-note {\n    font-family: font-family(title);\n    font-size: 350px;\n    cursor: pointer;\n  }\n\n  .controls {\n    padding: size(m);\n  }\n\n  .guitar-display {\n    display: flex;\n    flex-direction: column;\n    padding: size(m);\n\n    @include breakpoint-up(md) {\n      flex-direction: row;\n\n      .string-select {\n        flex-direction: column-reverse;\n      }\n    }\n\n    .guitar-neck {\n      flex: 1;\n    }\n  }\n}\n","$base-font: 15 !default;\n\n$font-family-sans-serif: -apple-system, system-ui, BlinkMacSystemFont,\n  'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !default;\n$font-family-body: 'Poppins', $font-family-sans-serif !default;\n$font-family-title: 'Calistoga', $font-family-sans-serif !default;\n$font-family-code: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n  monospace !default;\n\n$font-families: (\n  default: $font-family-sans-serif,\n  body: $font-family-body,\n  title: $font-family-title,\n  code: $font-family-code,\n) !default;\n\n$f-xxxl : 110 !default;\n$f-xxl  : 50 !default;\n$f-xl   : 24 !default;\n$f-l    : 20 !default;\n$f-m    : $base-font !default;\n$f-s    : 13 !default;\n$f-xs   : 12 !default;\n\n$font-sizes: (\n  default: $base-font,\n  xxxl: $f-xxxl,\n  xxl : $f-xxl,\n  xl  : $f-xl,\n  l   : $f-l,\n  m   : $f-m,\n  s   : $f-s,\n  xs  : $f-xs\n) !default;\n\n$f-normal : 400 !default;\n$f-medium : 500 !default;\n$f-bold   : 600 !default;\n\n$font-weights: (\n  default: $f-normal,\n  normal: $f-normal,\n  medium: $f-medium,\n  bold: $f-bold\n) !default;\n\n// Letter Spacing\n$ls-l: 0.06em;\n$ls-m: 0.04em;\n\n////\n// Convert a pixel value into a rem value.\n// Do not pass the pixel unit (ie. 10px); just pass the value (ie. 10).\n//\n// Ex: `margin: rem(10);`\n////\n@function rem($pixels) {\n  // If you want to debug things in pixel values, uncomment the following...\n  @return $pixels * 1px;\n  // @return ($pixels / $base-font) * 1rem;\n}\n\n////\n// Get one of the theme's font sizes.\n// The available sizes are defined in `$font-sizes`.\n//\n// Ex: `font-size: font-size(xxl);`\n////\n@function font-size($size: default) {\n  $s: map-get($font-sizes, $size);\n\n  @if $s == null {\n    @error('Could not find font size #{$size} on the theme provided: #{$font-sizes}');\n  }\n\n  @return rem($s);\n}\n\n////\n// Get one of the theme's font weights.\n// The available weights are defined in `$font-weights`.\n//\n// Ex: `font-size: font-size(bold);`\n////\n@function font-weight($weight: default) {\n  $w: map-get($font-weights, $weight);\n\n  @if $w == null {\n    @error('Could not find font weight #{$weight} on the theme provided: #{$font-weights}');\n  }\n\n  @return $w;\n}\n\n@function font-family($family: default) {\n  $f: map-get($font-families, $family);\n\n  @if $f == null {\n    @error('Could not find font family #{$family} on the theme provided: #{$font-families}');\n  }\n\n  @return $f;\n}\n","// Spacing / Measurement\n$s-xxxs : 4  !default;\n$s-xxs  : 8  !default;\n$s-xs   : 10 !default;\n$s-s    : 15 !default;\n$s-m    : 20 !default;\n$s-l    : 30 !default;\n$s-xl   : 35 !default;\n$s-xxl  : 50 !default;\n$s-xxxl : 70 !default;\n\n$sizes: (\n  default: $s-m,\n  xxxl: $s-xxxl,\n  xxl : $s-xxl,\n  xl  : $s-xl,\n  l   : $s-l,\n  m   : $s-m,\n  s   : $s-s,\n  xs  : $s-xs,\n  xxs : $s-xxs,\n  xxxs: $s-xxxs\n) !default;\n\n// Border radii\n$r-s: 2 !default;\n$r-m: 5 !default;\n$r-l: 12 !default;\n\n$radii: (\n  s: $r-s,\n  m: $r-m,\n  l: $r-l,\n);\n\n$grid-breakpoints: (\n  default: 0,\n  xs: 360px,\n  sm: 576px,\n  md: 768px,\n  lg: 992px,\n  xl: 1200px\n) !default;\n\n////\n// Get one of standard measurements (sizes) from the theme.\n//\n// Ex: `margin: size(xxl);`\n////\n@function size($size: default) {\n  $s: map-get($sizes, $size);\n\n  @if $s == null {\n    @error('Could not find measurement/size #{$size} on the theme provided: #{$sizes}');\n  }\n\n  @return rem($s);\n}\n\n@function radius($size: m) {\n  $s: map-get($radii, $size);\n\n  @if $s == null {\n    @error('Could not find measurement/size #{$size} on the theme provided: #{$sizes}');\n  }\n\n  @return rem($s);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Make any sizing property responsive.\n//\n// Ex:\n// @include responsive-sizing(30px, margin);\n// @include responsive-sizing(2rem, width);\n@mixin responsive-sizing($size, $prop: padding) {\n  $size-down: $size * 0.5;\n\n  #{$prop}: rem($size-down);\n  @include media-breakpoint-up(md) {\n    #{$prop}: rem($size);\n  }\n}\n","/* NotFoundPage */\n@import 'theme';\n\n.not-found-page {\n  .title {\n    margin-top: 20%;\n  }\n}\n","/* Main */\n@import 'theme';\n\n.main {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}\n"]}