{"version":3,"sources":["util/note-helper.js","util/array.js","pages/home/Home.jsx","pages/major-triads/MajorTriads.jsx","pages/not-found/NotFound.jsx","pages/main/Main.jsx","../node_modules/nk-request-timeout/index.js","../node_modules/component-raf/index.js","../node_modules/time-now/index.js"],"names":["generateShuffledNotes","includeSharps","previous","a","shuffled","j","x","i","slice","length","Math","floor","random","shuffle","notes","noteNames","newNotes","filter","item","shift","useNoteTimer","speed","useSharps","React","useReducer","state","newState","index","shuffledNotes","timer","setState","note","nextNote","useEffect","t","requestTimeout","clear","resetTimer","Home","fretCount","tuning","setTuning","setSpeed","setUseSharps","currentStrings","setCurrentStrings","notesToShow","onNextNote","s","setSharps","Connected","MajorTriads","string","round","grouped","chordDefinition","majorTriad","indexes","chordFretIndexes","maxFret","max","apply","notesInAnOctive","addOctives","NotFound","className","title","store","_authFailure","handleAuthFailure","setTimeout","Main","onAuthFailure","history","createStore","pages","name","path","getRoute","component","routes","map","p","key","fallback","exact","raf","now","module","exports","delay","fn","ctx","start","data","Object","create","id","loop","call","cancel","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","curr","Date","getTime","ms","prev","req","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","clearTimeout","perf","performance","bind"],"mappings":"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","file":"static/js/3.417e9104.chunk.js","sourcesContent":["import React from 'react';\nimport requestTimeout from 'nk-request-timeout';\n\nimport {\n  shuffle,\n  removeConsecutiveMatches,\n} from './array';\n\nimport {\n  notes,\n  noteNames,\n} from '~store';\n\nexport function generateShuffledNotes(includeSharps, previous) {\n  const shuffled = shuffle( includeSharps ? notes : noteNames );\n  const newNotes = removeConsecutiveMatches(shuffled);\n\n  // If the first note of the new list matches the\n  // last note of the old list, remove the first note\n  // from the new list so we don't get the same letter twice.\n  if (previous && newNotes[0] === previous[previous.length - 1]) {\n    newNotes.shift();\n  }\n\n  // TODO Handle the case that we now have a the same note twice\n  // due to removing the first note.\n\n  return newNotes;\n}\n\nexport function useNoteTimer(speed, useSharps) {\n  const [{index, shuffledNotes, timer}, setState] = React.useReducer(\n    (state, newState) => ({...state, ...newState}),\n    {},\n    () => ({\n      index: 0,\n      shuffledNotes: generateShuffledNotes(useSharps),\n      timer: null,\n    })\n  );\n  const note = shuffledNotes[index];\n\n  const nextNote = (timer) => {\n    if (index >= shuffledNotes.length - 1) {\n      setState({\n        index: 0,\n        shuffledNotes: generateShuffledNotes(useSharps, shuffledNotes),\n        timer,\n      });\n    } else {\n      setState({\n        index: index + 1,\n        timer\n      });\n    }\n  };\n\n  const resetTimer = (useSharps) => {\n    if (timer) requestTimeout.clear(timer);\n\n    const state = {timer: null};\n    if (useSharps != null) {\n      state.shuffledNotes = generateShuffledNotes(useSharps, shuffledNotes);\n    }\n\n    setState(state);\n  }\n\n  React.useEffect(() => {\n    const t = requestTimeout(speed * 1000, () => {\n      nextNote(t);\n    });\n    return () => {\n      requestTimeout.clear(t);\n    };\n  });\n\n  return {\n    note,\n    nextNote,\n    resetTimer,\n  };\n}\n","\n/**\n * Shuffles array in place.\n * @param {Array} a items An array containing the items.\n */\nexport function shuffle(a) {\n  a = a.slice();\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n\n/*\n * Remove consecutive elements from an array.\n * @param {Array} a items An array containing the items.\n */\nexport function removeConsecutiveMatches(a) {\n  return a.filter(function(item, i){\n    // Always keep the 0th element as there is nothing before it\n    // Then check if each element is different than the one before it\n    return i === 0 || item !== a[i-1];\n  });\n}\n","import React from 'react';\n\nimport {\n  MainLayout,\n  WithPreferences,\n} from '~components';\n\nimport {\n  useNoteTimer,\n} from '~util';\n\nimport './Home.scss';\n\nexport function Home({\n  fretCount,\n  tuning,\n  setTuning,\n  speed,\n  setSpeed,\n  useSharps,\n  setUseSharps,\n  currentStrings,\n  setCurrentStrings,\n}) {\n  const {note, nextNote, resetTimer} = useNoteTimer(speed, useSharps);\n\n  const changeSpeed = (s) => {\n    setSpeed(s);\n    resetTimer();\n  };\n\n  const changeSharps = () => {\n    setUseSharps(!useSharps);\n    resetTimer(!useSharps);\n  };\n\n  return (\n    <MainLayout\n      note={note}\n      notesToShow={note}\n      onNextNote={nextNote}\n      tuning={tuning}\n      currentStrings={currentStrings}\n      setCurrentStrings={setCurrentStrings}\n      fretCount={fretCount}\n      speed={speed}\n      setSpeed={changeSpeed}\n      useSharps={useSharps}\n      setSharps={changeSharps}\n    />\n  );\n}\n\n\nexport default function Connected() {\n  return (\n    <WithPreferences>\n      <Home />\n    </WithPreferences>\n  );\n}\n\n","import React from 'react';\n\nimport {\n  MainLayout,\n  WithPreferences,\n} from '~components';\n\nimport {\n  notesInAnOctive,\n  majorTriad,\n  chordDefinition,\n  chordFretIndexes,\n  addOctives,\n} from '~store';\n\nimport {\n  useNoteTimer,\n} from '~util';\n\nimport './MajorTriads.scss';\n\nexport function MajorTriads({\n  fretCount,\n  tuning,\n  setTuning,\n  speed,\n  setSpeed,\n  useSharps,\n  setUseSharps,\n  currentStrings,\n  setCurrentStrings,\n}) {\n  const {note, nextNote, resetTimer} = useNoteTimer(speed, useSharps);\n\n  const changeSpeed = (s) => {\n    setSpeed(s);\n    resetTimer();\n  };\n\n  const changeSharps = () => {\n    setUseSharps(!useSharps);\n    resetTimer(!useSharps);\n  };\n\n  const string = Math.round(Math.random() * 3);\n  let grouped = chordDefinition(majorTriad(note), string, 0, tuning);\n  const indexes = chordFretIndexes(tuning, grouped);\n  const maxFret = Math.max.apply(Math, indexes);\n\n  // See if we can add any additional octives.\n  if (maxFret + notesInAnOctive < fretCount) {\n    grouped = addOctives([grouped], maxFret, fretCount);\n  }\n\n  return (\n    <MainLayout\n      note={note}\n      notesToShow={grouped}\n      onNextNote={nextNote}\n      tuning={tuning}\n      currentStrings={currentStrings}\n      setCurrentStrings={setCurrentStrings}\n      fretCount={fretCount}\n      speed={speed}\n      setSpeed={changeSpeed}\n      useSharps={useSharps}\n      setSharps={changeSharps}\n    />\n  );\n}\n\nexport default function Connected() {\n  return (\n    <WithPreferences>\n      <MajorTriads />\n    </WithPreferences>\n  );\n}\n","import React from 'react';\n\nimport { NotFound as NotFoundComponent } from '~components';\n\nimport './NotFound.scss';\n\nexport default function NotFound() {\n  return (\n    <div className=\"not-found-page\">\n      <NotFoundComponent title=\"Page Not Found\" />\n    </div>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { Provider } from 'react-redux';\n\nimport {\n  Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\n// import Router from './DebugRouter';\n\nimport createStore from '../../store';\nimport { getRoute } from '../../store/routes';\nimport {\n  PageLoader,\n  Nav\n} from '~components';\nimport {\n  NotFound,\n  Home,\n  MajorTriads,\n} from '~pages';\n\nimport './Main.scss';\n\nlet store;\nlet _authFailure;\nlet handleAuthFailure = () => {\n  // Wait until the current render is complete\n  // before re-rendering to the Login page.\n  setTimeout(_authFailure);\n}\n\nexport default function Main({\n  onAuthFailure,\n  history,\n}) {\n  _authFailure = onAuthFailure;\n  if (!store) {\n    store = createStore(handleAuthFailure);\n  }\n\n  const pages = [{\n    name: 'Note Names', path: getRoute('NOTES'), component: Home\n  }, {\n    name: 'Triads', path: getRoute('MAJOR_TRIADS'), component: MajorTriads\n  }];\n\n  const routes = pages.map((p, i) => <Route {...p} key={i} />);\n\n  return (\n    <div className=\"main\">\n      <Provider store={store}>\n        <Router history={history}>\n          <Suspense fallback={<PageLoader />}>\n            <Nav pages={pages}>\n              <Switch>\n                <Route component={Home} path={getRoute('HOME')} exact />\n                { routes }\n                <Route component={NotFound} />\n              </Switch>\n            </Nav>\n          </Suspense>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n","'use strict';\n\nvar raf = require('raf');\n\nvar now = require('time-now');\n\nexports = module.exports = timeout;\n\nfunction timeout(delay, fn, ctx) {\n  var start = now();\n  var data = Object.create(null);\n  data.id = raf(loop);\n  return data;\n\n  function loop() {\n    now() - start >= delay ? fn.call(ctx) : data.id = raf(loop);\n  }\n}\n\nexports.clear = clearTimeout;\n\nfunction clearTimeout(data) {\n  raf.cancel(data.id);\n}","/**\n * Expose `requestAnimationFrame()`.\n */\nexports = module.exports = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || fallback;\n/**\n * Fallback implementation.\n */\n\nvar prev = new Date().getTime();\n\nfunction fallback(fn) {\n  var curr = new Date().getTime();\n  var ms = Math.max(0, 16 - (curr - prev));\n  var req = setTimeout(fn, ms);\n  prev = curr;\n  return req;\n}\n/**\n * Cancel.\n */\n\n\nvar cancel = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.clearTimeout;\n\nexports.cancel = function (id) {\n  cancel.call(window, id);\n};","'use strict';\n\nmodule.exports = function () {\n  var perf = window && window.performance;\n\n  if (perf && perf.now) {\n    return perf.now.bind(perf);\n  } else {\n    return function () {\n      return new Date().getTime();\n    };\n  }\n}();"],"sourceRoot":""}