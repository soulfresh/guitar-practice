@import 'theme';

$border-width: 2px;
@function border($w: $border-width) {
  @return $w solid foreground(divider);
}

@mixin dot {
  &::after {
    content: '';
    background-color: color(grayscale, 300);
    display: flex;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: -1;
  }
}

.guitar-neck {
  $border-width: 2px;
  $border: $border-width solid foreground(divider);
  // Padding inside of each note cell.
  $padding: size(xs);
  // The dimensions of the note representation (circle).
  $note-width: size(l);
  // The width of a fret.
  $fret-width: $note-width + $padding;

  display: flex;
  flex-direction: row;
  box-sizing: border-box;

  .string {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    flex: 1;
    transform: translateX(-50%);

    &:first-child {
      .note {
        border-bottom: none !important;
      }
    }

    // Center string
    &:nth-child(4) {
      .note {
        // 4th, 6th, 8th & 10th notes
        &:nth-child(12n + 4),
        &:nth-child(12n + 6),
        &:nth-child(12n + 8),
        &:nth-child(12n + 10) {
          @include dot;
        }
      }
    }

    // 2nd & 5th string
    &:nth-child(3),
    &:nth-child(5) {
      .note {
        &:nth-child(12n + 13) {
          @include dot;
        }
      }
    }

    .note {
      flex: 1;
      border-bottom: border();
      border-right: border();
      position: relative;
      min-width:  $fret-width;
      min-height: $fret-width;

      &:first-child {
        border-right: none;
        border-bottom-width: $border-width * 2;

        .note-name {
          opacity: 1;
          border-color: transparent;
        }
      }

      // Every octive after the first octive.
      &:nth-child(12n + 13) {
        border-bottom-width: $border-width * 2;
        border-bottom-style: dashed;
      }

      &:last-child {
        border-bottom: none;
      }

      $note-border: 1px solid background-dark();
      .note-name {
        @include flex-centered;
        width:  $note-width;
        height: $note-width;
        transform: translate(50%, #{$note-width * 0.2});
        position: absolute;
        right: 0;

        border-radius: 50%;
        border: $note-border;
        font-size: font-size(xs);
        color: foreground-dark();
        background-color: background-dark();
        opacity: 0;
        transition: opacity speed(s) linear, border speed(s) linear;
      }

      &.visible {
        .note-name {
          opacity: 1;

          &:first-child {
            border: $note-border;
          }
        }
      }

      &.open {
        .note-name {
          color: foreground();
          background-color: background();
        }
      }
    }
  }

  @include breakpoint-up(md) {
    flex-direction: column-reverse;

    .string {
      flex-direction: row;
      transform: translateY(50%);

      &:first-child {
        .note {
          border-right: none !important;
        }
      }


      .note {
        border-top: border();
        border-bottom: none;
        border-bottom-style: none !important;

        &:first-child {
          border-right: border($border-width * 2);
          border-top: none;
        }

        // Every octive after the first octive.
        &:nth-child(12n + 13) {
          border-right-width: $border-width * 2;
          border-right-style: dashed;
        }

        &:last-child {
          border-right: none;
        }

        .note-name {
          transform: translate(#{$note-width * -0.1}, -50%);
          top: 0;
        }
      }
    }
  }
}
